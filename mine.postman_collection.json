{
	"info": {
		"_postman_id": "ddf9e3dd-ff90-40f1-9f8a-4bf2bf7a0e2d",
		"name": "mine",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "{{url}}/users?page=2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f885e633-9a88-475d-bd2c-d7e50d32b123",
						"exec": [
							"schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The Root Schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"additionalProperties\": true,",
							"    \"required\": [",
							"        \"page\",",
							"        \"per_page\",",
							"        \"total\",",
							"        \"total_pages\",",
							"        \"data\",",
							"        \"ad\"",
							"    ],",
							"    \"properties\": {",
							"        \"page\": {",
							"            \"$id\": \"#/properties/page\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Page Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                2.0",
							"            ]",
							"        },",
							"        \"per_page\": {",
							"            \"$id\": \"#/properties/per_page\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Per_page Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                6.0",
							"            ]",
							"        },",
							"        \"total\": {",
							"            \"$id\": \"#/properties/total\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Total Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                12.0",
							"            ]",
							"        },",
							"        \"total_pages\": {",
							"            \"$id\": \"#/properties/total_pages\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Total_pages Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                2.0",
							"            ]",
							"        },",
							"        \"data\": {",
							"            \"$id\": \"#/properties/data\",",
							"            \"type\": \"array\",",
							"            \"title\": \"The Data Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": [],",
							"            \"examples\": [",
							"                [",
							"                    {",
							"                        \"email\": \"michael.lawson@reqres.in\",",
							"                        \"id\": 7.0,",
							"                        \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/follettkyle/128.jpg\",",
							"                        \"first_name\": \"Michael\",",
							"                        \"last_name\": \"Lawson\"",
							"                    },",
							"                    {",
							"                        \"id\": 8.0,",
							"                        \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/araa3185/128.jpg\",",
							"                        \"first_name\": \"Lindsay\",",
							"                        \"last_name\": \"Ferguson\",",
							"                        \"email\": \"lindsay.ferguson@reqres.in\"",
							"                    },",
							"                    {",
							"                        \"email\": \"tobias.funke@reqres.in\",",
							"                        \"id\": 9.0,",
							"                        \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/vivekprvr/128.jpg\",",
							"                        \"first_name\": \"Tobias\",",
							"                        \"last_name\": \"Funke\"",
							"                    }",
							"                ]",
							"            ],",
							"            \"additionalItems\": true,",
							"            \"items\": {",
							"                \"$id\": \"#/properties/data/items\",",
							"                \"type\": \"object\",",
							"                \"title\": \"The Items Schema\",",
							"                \"description\": \"An explanation about the purpose of this instance.\",",
							"                \"default\": {},",
							"                \"examples\": [",
							"                    {",
							"                        \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/follettkyle/128.jpg\",",
							"                        \"first_name\": \"Michael\",",
							"                        \"last_name\": \"Lawson\",",
							"                        \"email\": \"michael.lawson@reqres.in\",",
							"                        \"id\": 7.0",
							"                    },",
							"                    {",
							"                        \"id\": 8.0,",
							"                        \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/araa3185/128.jpg\",",
							"                        \"first_name\": \"Lindsay\",",
							"                        \"last_name\": \"Ferguson\",",
							"                        \"email\": \"lindsay.ferguson@reqres.in\"",
							"                    },",
							"                    {",
							"                        \"email\": \"tobias.funke@reqres.in\",",
							"                        \"id\": 9.0,",
							"                        \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/vivekprvr/128.jpg\",",
							"                        \"first_name\": \"Tobias\",",
							"                        \"last_name\": \"Funke\"",
							"                    }",
							"                ],",
							"                \"additionalProperties\": true,",
							"                \"required\": [",
							"                    \"id\",",
							"                    \"email\",",
							"                    \"first_name\",",
							"                    \"last_name\",",
							"                    \"avatar\"",
							"                ],",
							"                \"properties\": {",
							"                    \"id\": {",
							"                        \"$id\": \"#/properties/data/items/properties/id\",",
							"                        \"type\": \"integer\",",
							"                        \"title\": \"The Id Schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": 0,",
							"                        \"examples\": [",
							"                            7.0",
							"                        ]",
							"                    },",
							"                    \"email\": {",
							"                        \"$id\": \"#/properties/data/items/properties/email\",",
							"                        \"type\": \"string\",",
							"                        \"title\": \"The Email Schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": \"\",",
							"                        \"examples\": [",
							"                            \"michael.lawson@reqres.in\"",
							"                        ]",
							"                    },",
							"                    \"first_name\": {",
							"                        \"$id\": \"#/properties/data/items/properties/first_name\",",
							"                        \"type\": \"string\",",
							"                        \"title\": \"The First_name Schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": \"\",",
							"                        \"examples\": [",
							"                            \"Michael\"",
							"                        ]",
							"                    },",
							"                    \"last_name\": {",
							"                        \"$id\": \"#/properties/data/items/properties/last_name\",",
							"                        \"type\": \"string\",",
							"                        \"title\": \"The Last_name Schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": \"\",",
							"                        \"examples\": [",
							"                            \"Lawson\"",
							"                        ]",
							"                    },",
							"                    \"avatar\": {",
							"                        \"$id\": \"#/properties/data/items/properties/avatar\",",
							"                        \"type\": \"string\",",
							"                        \"title\": \"The Avatar Schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": \"\",",
							"                        \"examples\": [",
							"                            \"https://s3.amazonaws.com/uifaces/faces/twitter/follettkyle/128.jpg\"",
							"                        ]",
							"                    }",
							"                }",
							"            }",
							"        },",
							"        \"ad\": {",
							"            \"$id\": \"#/properties/ad\",",
							"            \"type\": \"object\",",
							"            \"title\": \"The Ad Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": {},",
							"            \"examples\": [",
							"                {",
							"                    \"company\": \"StatusCode Weekly\",",
							"                    \"url\": \"http://statuscode.org/\",",
							"                    \"text\": \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\"",
							"                }",
							"            ],",
							"            \"additionalProperties\": true,",
							"            \"required\": [",
							"                \"company\",",
							"                \"url\",",
							"                \"text\"",
							"            ],",
							"            \"properties\": {",
							"                \"company\": {",
							"                    \"$id\": \"#/properties/ad/properties/company\",",
							"                    \"type\": \"string\",",
							"                    \"title\": \"The Company Schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": \"\",",
							"                    \"examples\": [",
							"                        \"StatusCode Weekly\"",
							"                    ]",
							"                },",
							"                \"url\": {",
							"                    \"$id\": \"#/properties/ad/properties/url\",",
							"                    \"type\": \"string\",",
							"                    \"title\": \"The Url Schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": \"\",",
							"                    \"examples\": [",
							"                        \"http://statuscode.org/\"",
							"                    ]",
							"                },",
							"                \"text\": {",
							"                    \"$id\": \"#/properties/ad/properties/text\",",
							"                    \"type\": \"string\",",
							"                    \"title\": \"The Text Schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": \"\",",
							"                    \"examples\": [",
							"                        \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\"",
							"                    ]",
							"                }",
							"            }",
							"        }",
							"    }",
							"}",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Your test name\", function () {",
							"    var result = tv4.validateResult(pm.response.json(), schema)",
							"    if(!result.valid){",
							"        console.log(result)",
							"    }",
							"    pm.expect(result.valid).to.be.true;",
							"",
							"});",
							"",
							"pm.test(\"Check page value\", function () {",
							"    let data = pm.response.json();",
							"    pm.expect(data.page).to.eql(2);",
							"});",
							"pm.test(\"Check per_page value\", function () {",
							"    let data = pm.response.json();",
							"    pm.expect(data.per_page).to.eql(6);",
							"});",
							"",
							"pm.test(\"Check total_pages value\", function () {",
							"    let data = pm.response.json();",
							"    pm.expect(data.total_pages).to.eql(2);",
							"});",
							"",
							"pm.test(\"Check id0 value\", function () {",
							"    let data = pm.response.json();",
							"    pm.expect(data.data[0].id).to.eql(7);",
							"});",
							"",
							"pm.test(\"Check id0 value\", function () {",
							"    let data = pm.response.json();",
							"    pm.expect(data.data[0].id).to.eql(7);",
							"});",
							"",
							"pm.test(\"Check email1\", function () {",
							"    let data = pm.response.json();",
							"    pm.expect(data.data[0].email).to.eql(\"michael.lawson@reqres.in\");",
							"});",
							"",
							"pm.test(\"Check email1\", function () {",
							"    let data = pm.response.json();",
							"    pm.expect(data.data[0].last_name).to.eql(\"Lawson\");",
							"});",
							"",
							"pm.test(\"Check avatar regex\", function () {",
							"    let data = pm.response.json();",
							"    regex = \"https://s3.amazonaws.com/uifaces/faces/twitter/\"",
							"    for (i=0; i < data.data.length; i++){",
							"        console.log(data.data[i].avatar);",
							"        pm.expect(data.data[i].avatar).to.have.string(regex);",
							"pm.environment.unset(\"variable_key\");",
							"    }",
							"});",
							"",
							"//   pm.test(\"Check if environment is production\", function () {",
							"//       pm.expect(pm.environment.get('env')).to.equal('mine_url');",
							"//   });",
							"  ",
							"//   pm.test(\"Check if environment is production\", function () {",
							"//       pm.expect(pm.globals.get('environment')).to.equal('environment');",
							"//   });",
							"",
							"",
							"",
							"pm.test(\"Check avatar extension\", function () {",
							"    let data = pm.response.json();",
							"    regex = \"128.jpg\"",
							"    for (i=0; i < data.data.length; i++){",
							"        console.log(data.data[i].avatar);",
							"        pm.expect(data.data[i].avatar).to.have.string(regex);",
							"        pm.expect(data.data[i].avatar).to.be.a(\"string\");",
							"    }",
							"});",
							"",
							"pm.test(\"Check avatar type is string\", function () {",
							"    let data = pm.response.json();",
							"    regex = \"128.jpg\"",
							"    for (i=0; i < data.data.length; i++){",
							"        console.log(data.data[i].avatar);",
							"        pm.expect(data.data[i].avatar).to.be.a(\"string\");",
							"    }",
							"});",
							"",
							"pm.test(\"Check avatar type is string\", function () {",
							"    let data = pm.response.json();",
							"    regex = \"128.jpg\"",
							"    for (i=0; i < data.data.length; i++){",
							"        for (var key in data.data[i]) {",
							"            // check if the property/key is defined in the object itself, not in parent",
							"            if (data.data[i].hasOwnProperty(key)) { ",
							"                if (key !== \"id\") {",
							"                    // console.log(key, data.data[i][key]);",
							"                    pm.expect(data.data[i][key]).to.be.a(\"string\");",
							"                }",
							"                else if ( key == \"id\") {",
							"                    pm.expect(data.data[i][key]).to.be.a(\"number\");",
							"                }",
							"            }",
							"        }",
							"    }",
							"});",
							"",
							"pm.test(\"Check if object contains all provided keys\", function () {",
							"    let data = pm.response.json();",
							"    for (i=0; i < data.data.length; i++){",
							"        pm.expect(data.data[i]).to.have.all.keys('id', 'email', 'first_name', 'last_name', 'avatar');",
							"    }",
							"    });",
							"    ",
							"pm.test(\"Check if object contains any provided keys\", function () {",
							"    let data = pm.response.json();",
							"    for (i=0; i < data.data.length; i++){",
							"        pm.expect(data.data[i]).to.have.any.keys('id', 'email', 'avatar', 'dupa');",
							"    }",
							"    });",
							"    ",
							"pm.test(\"Check if object contains any NONE provided keys\", function () {",
							"    let data = pm.response.json();",
							"    for (i=0; i < data.data.length; i++){",
							"        pm.expect(data.data[i]).to.not.have.any.keys('dupa');",
							"    }",
							"    });",
							"",
							"pm.test(\"Check if object contains provided propery\", function () {",
							"    let data = pm.response.json();",
							"    for (i=0; i < data.data.length; i++){",
							"        pm.expect(data.data[i]).to.have.property('email',);",
							"    }",
							"    });",
							"",
							"pm.test(\"Check if object contains provided propery\", function () {",
							"    let data = pm.response.json();",
							"    for (i=0; i < data.data.length; i++){",
							"        pm.expect(data.data[i]).to.have.property('avatar',);",
							"    }",
							"    });",
							"    ",
							"pm.test(\"Check if object contains provided propery\", function () {",
							"    let data = pm.response.json();",
							"    for (i=0; i < data.data.length; i++){",
							"        pm.expect(data.data[i]).to.be.an('object').that.has.all.keys('id', 'email', 'first_name', 'last_name', 'avatar');",
							"    }",
							"    });",
							"",
							"pm.test(\"Check if object contains provided propery\", function () {",
							"    let data = pm.response.json();",
							"    for (i=0; i < data.data.length; i++){",
							"            console.log(data.data[i]);",
							"            keys = Object.keys(data.data[i]);",
							"            // console.log(keys);",
							"            pm.expect(keys).to.have.members([\"id\", \"avatar\",\"last_name\", \"email\", \"first_name\"]);",
							"    }",
							"    });",
							"    ",
							"pm.test(\"Check if the target object includes the properties provided\", function () {",
							"    let jso = pm.response.json();",
							"    for (i=0; i < jso.data.length; i++){",
							"            console.log(jso.data[i]);",
							"            keys = Object.keys(jso.data[i]);",
							"            console.log(keys);",
							"            pm.expect(keys).to.include(\"id\", \"avatar\", \"email\", \"first_name\",\"last_name\");",
							"    }",
							"    });",
							"    ",
							"pm.test(\"Check if the target object includes the properties provided\", function () {",
							"    let jso = pm.response.json();",
							"            pm.expect(jso.data[1]).to.include( {",
							"            \"id\": 8,",
							"            \"email\": \"lindsay.ferguson@reqres.in\",",
							"            \"first_name\": \"Lindsay\",",
							"            \"last_name\": \"Ferguson\",",
							"            \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/araa3185/128.jpg\"",
							"        });",
							"    });",
							"",
							"pm.test(\"Check if the target object includes the properties provided\", function () {",
							"    let jso = pm.response.json();",
							"            pm.expect(jso.data[4]).to.include(         {",
							"            \"id\": 11,",
							"            \"email\": \"george.edwards@reqres.in\",",
							"            \"first_name\": \"George\",",
							"            \"last_name\": \"Edwards\",",
							"            \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/mrmoiree/128.jpg\"",
							"        });",
							"    });",
							"    ",
							"pm.test(\"Check if the ad object includes the properties provided\", function () {",
							"    let jso = pm.response.json();",
							"            pm.expect(jso.ad).to.include( {",
							"            \"company\": \"StatusCode Weekly\",",
							"            \"url\": \"http://statuscode.org/\",",
							"            \"text\": \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\"",
							"    });",
							"    ",
							"pm.test(\"Check if the ad object includes the properties provided\", function () {",
							"let jso = pm.response.json();",
							"        pm.expect(jso.ad.url).to.be.a(\"string\");",
							"    });",
							"",
							"",
							"pm.test(\"Check if the ad object includes the properties provided\", function () {",
							"let jso = pm.response.json();",
							"        pm.expect(jso.ad.company).to.be.a(\"string\");",
							"    });",
							"",
							"",
							"pm.test(\"Check if the ad object includes the properties provided\", function () {",
							"    let jso = pm.response.json();",
							"        pm.expect(jso.ad.text).to.be.a(\"string\");",
							"    });",
							"    ",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/users?page=2",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "https://reqres.in/api/users/2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fa693cee-ac1b-4a29-86dd-1ed1fbbc4222",
						"exec": [
							"schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The Root Schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"additionalProperties\": true,\r",
							"    \"required\": [\r",
							"        \"data\",\r",
							"        \"ad\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"data\": {\r",
							"            \"$id\": \"#/properties/data\",\r",
							"            \"type\": \"object\",\r",
							"            \"title\": \"The Data Schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": {},\r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"email\": \"janet.weaver@reqres.in\",\r",
							"                    \"id\": 2.0,\r",
							"                    \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg\",\r",
							"                    \"first_name\": \"Janet\",\r",
							"                    \"last_name\": \"Weaver\"\r",
							"                }\r",
							"            ],\r",
							"            \"additionalProperties\": true,\r",
							"            \"required\": [\r",
							"                \"id\",\r",
							"                \"email\",\r",
							"                \"first_name\",\r",
							"                \"last_name\",\r",
							"                \"avatar\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"id\": {\r",
							"                    \"$id\": \"#/properties/data/properties/id\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The Id Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        2.0\r",
							"                    ]\r",
							"                },\r",
							"                \"email\": {\r",
							"                    \"$id\": \"#/properties/data/properties/email\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The Email Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"janet.weaver@reqres.in\"\r",
							"                    ]\r",
							"                },\r",
							"                \"first_name\": {\r",
							"                    \"$id\": \"#/properties/data/properties/first_name\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The First_name Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"Janet\"\r",
							"                    ]\r",
							"                },\r",
							"                \"last_name\": {\r",
							"                    \"$id\": \"#/properties/data/properties/last_name\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The Last_name Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"Weaver\"\r",
							"                    ]\r",
							"                },\r",
							"                \"avatar\": {\r",
							"                    \"$id\": \"#/properties/data/properties/avatar\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The Avatar Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg\"\r",
							"                    ]\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        \"ad\": {\r",
							"            \"$id\": \"#/properties/ad\",\r",
							"            \"type\": \"object\",\r",
							"            \"title\": \"The Ad Schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": {},\r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"company\": \"StatusCode Weekly\",\r",
							"                    \"url\": \"http://statuscode.org/\",\r",
							"                    \"text\": \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\"\r",
							"                }\r",
							"            ],\r",
							"            \"additionalProperties\": true,\r",
							"            \"required\": [\r",
							"                \"company\",\r",
							"                \"url\",\r",
							"                \"text\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"company\": {\r",
							"                    \"$id\": \"#/properties/ad/properties/company\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The Company Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"StatusCode Weekly\"\r",
							"                    ]\r",
							"                },\r",
							"                \"url\": {\r",
							"                    \"$id\": \"#/properties/ad/properties/url\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The Url Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"http://statuscode.org/\"\r",
							"                    ]\r",
							"                },\r",
							"                \"text\": {\r",
							"                    \"$id\": \"#/properties/ad/properties/text\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The Text Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\"\r",
							"                    ]\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"}\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var result = tv4.validateResult(pm.response.json(), schema)\r",
							"    if(!result.valid){\r",
							"        console.log(result)\r",
							"    }\r",
							"    pm.expect(result.valid).to.be.true;\r",
							"\r",
							"\r",
							"pm.test(\"Check avatar regex\", function () {\r",
							"    let jso = pm.response.json();\r",
							"    regex = \"@\"\r",
							"    pm.expect(jso.data.email).to.have.string(regex);\r",
							"    });\r",
							"\r",
							"pm.test(\"Check if the target object includes the properties provided\", function () {\r",
							"    let jso = pm.response.json();\r",
							"    for (i=0; i < jso.data.length; i++){\r",
							"            console.log(jso.data[i]);\r",
							"            keys = Object.keys(jso.data[i]);\r",
							"            console.log(keys);\r",
							"            pm.expect(keys).to.include(\"id\", \"avatar\", \"email\", \"first_name\",\"last_name\");\r",
							"    }\r",
							"    });\r",
							"\r",
							"pm.test(\"Check if the target object includes the properties provided\", function () {\r",
							"    let jso = pm.response.json();\r",
							"    for (i=0; i < jso.data.length; i++){\r",
							"            val = Object.values(jso.data[i]);;\r",
							"            pm.expect(val).to.include(2, \"janet.weaver@reqres.in\", \"Janet\", \"Weaver\",\r",
							"            \"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg\");\r",
							"    }\r",
							"    });\r",
							"// 2 nawiasy musza byc na koncu    \r",
							"\r",
							"\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://reqres.in/api/users/23",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3344b7fe-c373-4686-9f60-2e06b216770f",
						"exec": [
							"schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The Root Schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"additionalProperties\": true",
							"}",
							"",
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var result = tv4.validateResult(pm.response.json(), schema)",
							"    if(!result.valid){",
							"        console.log(result)",
							"    }",
							"    pm.expect(result.valid).to.be.true;",
							"",
							"});",
							"",
							"pm.test(\"Check if object is empty\", function () {",
							"    let jso = pm.response.json();",
							"    pm.expect(jso).to.be.empty;",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/23",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://reqres.in/api/unknown",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7bfd16d5-e478-4fd2-b847-c107efe1070f",
						"exec": [
							"schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The Root Schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"additionalProperties\": true,",
							"    \"required\": [",
							"        \"page\",",
							"        \"per_page\",",
							"        \"total\",",
							"        \"total_pages\",",
							"        \"data\",",
							"        \"ad\"",
							"    ],",
							"    \"properties\": {",
							"        \"page\": {",
							"            \"$id\": \"#/properties/page\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Page Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                1.0",
							"            ]",
							"        },",
							"        \"per_page\": {",
							"            \"$id\": \"#/properties/per_page\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Per_page Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                6.0",
							"            ]",
							"        },",
							"        \"total\": {",
							"            \"$id\": \"#/properties/total\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Total Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                12.0",
							"            ]",
							"        },",
							"        \"total_pages\": {",
							"            \"$id\": \"#/properties/total_pages\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Total_pages Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                2.0",
							"            ]",
							"        },",
							"        \"data\": {",
							"            \"$id\": \"#/properties/data\",",
							"            \"type\": \"array\",",
							"            \"title\": \"The Data Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": [],",
							"            \"examples\": [",
							"                [",
							"                    {",
							"                        \"color\": \"#98B2D1\",",
							"                        \"id\": 1.0,",
							"                        \"year\": 2000.0,",
							"                        \"pantone_value\": \"15-4020\",",
							"                        \"name\": \"cerulean\"",
							"                    },",
							"                    {",
							"                        \"name\": \"fuchsia rose\",",
							"                        \"color\": \"#C74375\",",
							"                        \"id\": 2.0,",
							"                        \"year\": 2001.0,",
							"                        \"pantone_value\": \"17-2031\"",
							"                    },",
							"                    {",
							"                        \"color\": \"#BF1932\",",
							"                        \"id\": 3.0,",
							"                        \"year\": 2002.0,",
							"                        \"pantone_value\": \"19-1664\",",
							"                        \"name\": \"true red\"",
							"                    }",
							"                ]",
							"            ],",
							"            \"additionalItems\": true,",
							"            \"items\": {",
							"                \"$id\": \"#/properties/data/items\",",
							"                \"type\": \"object\",",
							"                \"title\": \"The Items Schema\",",
							"                \"description\": \"An explanation about the purpose of this instance.\",",
							"                \"default\": {},",
							"                \"examples\": [",
							"                    {",
							"                        \"name\": \"cerulean\",",
							"                        \"color\": \"#98B2D1\",",
							"                        \"id\": 1.0,",
							"                        \"year\": 2000.0,",
							"                        \"pantone_value\": \"15-4020\"",
							"                    },",
							"                    {",
							"                        \"color\": \"#C74375\",",
							"                        \"id\": 2.0,",
							"                        \"year\": 2001.0,",
							"                        \"pantone_value\": \"17-2031\",",
							"                        \"name\": \"fuchsia rose\"",
							"                    },",
							"                    {",
							"                        \"id\": 3.0,",
							"                        \"year\": 2002.0,",
							"                        \"pantone_value\": \"19-1664\",",
							"                        \"name\": \"true red\",",
							"                        \"color\": \"#BF1932\"",
							"                    }",
							"                ],",
							"                \"additionalProperties\": true,",
							"                \"required\": [",
							"                    \"id\",",
							"                    \"name\",",
							"                    \"year\",",
							"                    \"color\",",
							"                    \"pantone_value\"",
							"                ],",
							"                \"properties\": {",
							"                    \"id\": {",
							"                        \"$id\": \"#/properties/data/items/properties/id\",",
							"                        \"type\": \"integer\",",
							"                        \"title\": \"The Id Schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": 0,",
							"                        \"examples\": [",
							"                            1.0",
							"                        ]",
							"                    },",
							"                    \"name\": {",
							"                        \"$id\": \"#/properties/data/items/properties/name\",",
							"                        \"type\": \"string\",",
							"                        \"title\": \"The Name Schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": \"\",",
							"                        \"examples\": [",
							"                            \"cerulean\"",
							"                        ]",
							"                    },",
							"                    \"year\": {",
							"                        \"$id\": \"#/properties/data/items/properties/year\",",
							"                        \"type\": \"integer\",",
							"                        \"title\": \"The Year Schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": 0,",
							"                        \"examples\": [",
							"                            2000.0",
							"                        ]",
							"                    },",
							"                    \"color\": {",
							"                        \"$id\": \"#/properties/data/items/properties/color\",",
							"                        \"type\": \"string\",",
							"                        \"title\": \"The Color Schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": \"\",",
							"                        \"examples\": [",
							"                            \"#98B2D1\"",
							"                        ]",
							"                    },",
							"                    \"pantone_value\": {",
							"                        \"$id\": \"#/properties/data/items/properties/pantone_value\",",
							"                        \"type\": \"string\",",
							"                        \"title\": \"The Pantone_value Schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": \"\",",
							"                        \"examples\": [",
							"                            \"15-4020\"",
							"                        ]",
							"                    }",
							"                }",
							"            }",
							"        },",
							"        \"ad\": {",
							"            \"$id\": \"#/properties/ad\",",
							"            \"type\": \"object\",",
							"            \"title\": \"The Ad Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": {},",
							"            \"examples\": [",
							"                {",
							"                    \"text\": \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\",",
							"                    \"company\": \"StatusCode Weekly\",",
							"                    \"url\": \"http://statuscode.org/\"",
							"                }",
							"            ],",
							"            \"additionalProperties\": true,",
							"            \"required\": [",
							"                \"company\",",
							"                \"url\",",
							"                \"text\"",
							"            ],",
							"            \"properties\": {",
							"                \"company\": {",
							"                    \"$id\": \"#/properties/ad/properties/company\",",
							"                    \"type\": \"string\",",
							"                    \"title\": \"The Company Schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": \"\",",
							"                    \"examples\": [",
							"                        \"StatusCode Weekly\"",
							"                    ]",
							"                },",
							"                \"url\": {",
							"                    \"$id\": \"#/properties/ad/properties/url\",",
							"                    \"type\": \"string\",",
							"                    \"title\": \"The Url Schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": \"\",",
							"                    \"examples\": [",
							"                        \"http://statuscode.org/\"",
							"                    ]",
							"                },",
							"                \"text\": {",
							"                    \"$id\": \"#/properties/ad/properties/text\",",
							"                    \"type\": \"string\",",
							"                    \"title\": \"The Text Schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": \"\",",
							"                    \"examples\": [",
							"                        \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\"",
							"                    ]",
							"                }",
							"            }",
							"        }",
							"    }",
							"}",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var result = tv4.validateResult(pm.response.json(), schema)",
							"    if(!result.valid){",
							"        console.log(result)",
							"    }",
							"    pm.expect(result.valid).to.be.true;",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/unknown",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{url}}/unknown/2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db87be41-ecf6-4974-9e94-a5d9e75613ba",
						"exec": [
							"schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The Root Schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"additionalProperties\": true,\r",
							"    \"required\": [\r",
							"        \"data\",\r",
							"        \"ad\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"data\": {\r",
							"            \"$id\": \"#/properties/data\",\r",
							"            \"type\": \"object\",\r",
							"            \"title\": \"The Data Schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": {},\r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"name\": \"fuchsia rose\",\r",
							"                    \"color\": \"#C74375\",\r",
							"                    \"id\": 2.0,\r",
							"                    \"year\": 2001.0,\r",
							"                    \"pantone_value\": \"17-2031\"\r",
							"                }\r",
							"            ],\r",
							"            \"additionalProperties\": true,\r",
							"            \"required\": [\r",
							"                \"id\",\r",
							"                \"name\",\r",
							"                \"year\",\r",
							"                \"color\",\r",
							"                \"pantone_value\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"id\": {\r",
							"                    \"$id\": \"#/properties/data/properties/id\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The Id Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        2.0\r",
							"                    ]\r",
							"                },\r",
							"                \"name\": {\r",
							"                    \"$id\": \"#/properties/data/properties/name\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The Name Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"fuchsia rose\"\r",
							"                    ]\r",
							"                },\r",
							"                \"year\": {\r",
							"                    \"$id\": \"#/properties/data/properties/year\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The Year Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        2001.0\r",
							"                    ]\r",
							"                },\r",
							"                \"color\": {\r",
							"                    \"$id\": \"#/properties/data/properties/color\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The Color Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"#C74375\"\r",
							"                    ]\r",
							"                },\r",
							"                \"pantone_value\": {\r",
							"                    \"$id\": \"#/properties/data/properties/pantone_value\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The Pantone_value Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"17-2031\"\r",
							"                    ]\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        \"ad\": {\r",
							"            \"$id\": \"#/properties/ad\",\r",
							"            \"type\": \"object\",\r",
							"            \"title\": \"The Ad Schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": {},\r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"text\": \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\",\r",
							"                    \"company\": \"StatusCode Weekly\",\r",
							"                    \"url\": \"http://statuscode.org/\"\r",
							"                }\r",
							"            ],\r",
							"            \"additionalProperties\": true,\r",
							"            \"required\": [\r",
							"                \"company\",\r",
							"                \"url\",\r",
							"                \"text\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"company\": {\r",
							"                    \"$id\": \"#/properties/ad/properties/company\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The Company Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"StatusCode Weekly\"\r",
							"                    ]\r",
							"                },\r",
							"                \"url\": {\r",
							"                    \"$id\": \"#/properties/ad/properties/url\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The Url Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"http://statuscode.org/\"\r",
							"                    ]\r",
							"                },\r",
							"                \"text\": {\r",
							"                    \"$id\": \"#/properties/ad/properties/text\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The Text Schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\"\r",
							"                    ]\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"}\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var result = tv4.validateResult(pm.response.json(), schema)\r",
							"    if(!result.valid){\r",
							"        console.log(result)\r",
							"    }\r",
							"    pm.expect(result.valid).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Check if the ad year is number\", function () {\r",
							"    let jso = pm.response.json();\r",
							"        pm.expect(jso.data.year).to.be.a(\"number\");\r",
							"    });\r",
							"    \r",
							"pm.test(\"Check if the pantone_value is string\", function () {\r",
							"    let jso = pm.response.json();\r",
							"        pm.expect(jso.data.pantone_value).to.be.a(\"string\");\r",
							"    });\r",
							"\r",
							"pm.test(\"Check avatar regex\", function () {\r",
							"    let jso = pm.response.json();\r",
							"    regex = \"#\"\r",
							"    pm.expect(jso.data.color).to.have.string(regex);\r",
							"    });    \r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/unknown/2",
					"host": [
						"{{url}}"
					],
					"path": [
						"unknown",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://reqres.in/api/unknown/23",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9e0c7296-86b8-47fd-8308-36e44898eb49",
						"exec": [
							"schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The Root Schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"additionalProperties\": true",
							"}",
							"",
							"",
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var result = tv4.validateResult(pm.response.json(), schema)",
							"    if(!result.valid){",
							"        console.log(result)",
							"    }",
							"    pm.expect(result.valid).to.be.true;",
							"",
							"});",
							"",
							"pm.test(\"Check if object is empty\", function () {",
							"    let jso = pm.response.json();",
							"    pm.expect(jso).to.be.empty;",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/unknown/23",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"unknown",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://reqres.in/api/users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9095ab60-eeb5-4242-8a20-ecb746f810dc",
						"exec": [
							"schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The Root Schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"additionalProperties\": true,\r",
							"    \"required\": [\r",
							"        \"name\",\r",
							"        \"job\",\r",
							"        \"id\",\r",
							"        \"createdAt\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"name\": {\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Name Schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"morpheus\"\r",
							"            ]\r",
							"        },\r",
							"        \"job\": {\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Job Schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"leader\"\r",
							"            ]\r",
							"        },\r",
							"        \"id\": {\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Id Schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"245\"\r",
							"            ]\r",
							"        },\r",
							"        \"createdAt\": {\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Createdat Schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"2020-04-19T18:11:30.710Z\"\r",
							"            ]\r",
							"        }\r",
							"    }\r",
							"}\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var result = tv4.validateResult(pm.response.json(), schema)\r",
							"    if(!result.valid){\r",
							"        console.log(result)\r",
							"    }\r",
							"    pm.expect(result.valid).to.be.true;\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"morpheus\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check name content\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"morpheus\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check job content\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.job).to.eql(\"leader\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Date is present\", function () {\r",
							"    pm.response.to.have.header(\"Date\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Connection is present\", function () {\r",
							"    pm.response.to.have.header(\"Connection\");\r",
							"});\r",
							"\r",
							"pm.test(\"Connection is present\", function () {\r",
							"    pm.response.to.have.header(\"X-Powered-By\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Check if the id object is numerous string\", function () {\r",
							"    let jso = pm.response.json();\r",
							"        pm.expect(parseInt(jso.id)).to.be.a(\"number\");\r",
							"    });\r",
							"\r",
							"pm.test(\"Check if the id object is numerous string\", function () {\r",
							"    function isNumber(str){\r",
							"        return !/\\D/.test(str);\r",
							"    }\r",
							"    let jso = pm.response.json();\r",
							"        pm.expect(isNumber(jso.id))\r",
							"    });\r",
							"\r",
							"pm.test(\"Check if the id object is numerous string\", function () {\r",
							"    const moment = require('moment');\r",
							"    const formats = [\r",
							"        moment.ISO_8601,\r",
							"        \"MM/DD/YYYY  :)  HH*mm*ss\"\r",
							"    ]\r",
							"    let jso = pm.response.json();\r",
							"        pm.expect(moment(jso.createdAt, moment.ISO_8601, true).isValid());\r",
							"    });\r",
							"\r",
							"\r",
							"    \r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{url}}/users/2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "303479d4-2206-4faf-8b0b-1d06c962b2cc",
						"exec": [
							"schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The Root Schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"additionalProperties\": true,\r",
							"    \"required\": [\r",
							"        \"name\",\r",
							"        \"job\",\r",
							"        \"updatedAt\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"name\": {\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Name Schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"morpheus\"\r",
							"            ]\r",
							"        },\r",
							"        \"job\": {\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Job Schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"zion resident\"\r",
							"            ]\r",
							"        },\r",
							"        \"updatedAt\": {\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Updatedat Schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"2020-04-19T19:57:06.708Z\"\r",
							"            ]\r",
							"        }\r",
							"    }\r",
							"}\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"morpheus\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check name content\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"morpheus\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check job content\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.job).to.eql(\"zion resident\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Date is present\", function () {\r",
							"    pm.response.to.have.header(\"Date\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Connection is present\", function () {\r",
							"    pm.response.to.have.header(\"Connection\");\r",
							"});\r",
							"\r",
							"pm.test(\"Connection is present\", function () {\r",
							"    pm.response.to.have.header(\"X-Powered-By\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Check if the id object is numerous string\", function () {\r",
							"    let jso = pm.response.json();\r",
							"        pm.expect(parseInt(jso.id)).to.be.a(\"number\");\r",
							"    });\r",
							"\r",
							"pm.test(\"Check if the id object is numerous string\", function () {\r",
							"    function isNumber(str){\r",
							"        return !/\\D/.test(str);\r",
							"    }\r",
							"    let jso = pm.response.json();\r",
							"        pm.expect(isNumber(jso.id))\r",
							"    });\r",
							"\r",
							"pm.test(\"Check if the id object is numerous string\", function () {\r",
							"    const moment = require('moment');\r",
							"    const formats = [\r",
							"        moment.ISO_8601,\r",
							"        \"MM/DD/YYYY  :)  HH*mm*ss\"\r",
							"    ]\r",
							"    let jso = pm.response.json();\r",
							"        pm.expect(moment(jso.createdAt, moment.ISO_8601, true).isValid());\r",
							"    });\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var result = tv4.validateResult(pm.response.json(), schema)\r",
							"    if(!result.valid){\r",
							"        console.log(result)\r",
							"    }\r",
							"    pm.expect(result.valid).to.be.true;\r",
							"\r",
							"});\r",
							"    \r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users/2",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "[PATCH]{{url}}/users/2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "303479d4-2206-4faf-8b0b-1d06c962b2cc",
						"exec": [
							"schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The Root Schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"additionalProperties\": true,\r",
							"    \"required\": [\r",
							"        \"name\",\r",
							"        \"job\",\r",
							"        \"updatedAt\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"name\": {\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Name Schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"morpheus\"\r",
							"            ]\r",
							"        },\r",
							"        \"job\": {\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Job Schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"zion resident\"\r",
							"            ]\r",
							"        },\r",
							"        \"updatedAt\": {\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Updatedat Schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"2020-04-19T19:57:06.708Z\"\r",
							"            ]\r",
							"        }\r",
							"    }\r",
							"}\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"morpheus\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check name content\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"morpheus\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check job content\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.job).to.eql(\"zion resident\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Date is present\", function () {\r",
							"    pm.response.to.have.header(\"Date\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Connection is present\", function () {\r",
							"    pm.response.to.have.header(\"Connection\");\r",
							"});\r",
							"\r",
							"pm.test(\"Connection is present\", function () {\r",
							"    pm.response.to.have.header(\"X-Powered-By\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var result = tv4.validateResult(pm.response.json(), schema)\r",
							"    if(!result.valid){\r",
							"        console.log(result)\r",
							"    }\r",
							"    pm.expect(result.valid).to.be.true;\r",
							"\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Check if the id object is numerous string\", function () {\r",
							"    let jso = pm.response.json();\r",
							"        pm.expect(parseInt(jso.id)).to.be.a(\"number\");\r",
							"    });\r",
							"\r",
							"pm.test(\"Check if the id object is numerous string\", function () {\r",
							"    function isNumber(str){\r",
							"        return !/\\D/.test(str);\r",
							"    }\r",
							"    let jso = pm.response.json();\r",
							"        pm.expect(isNumber(jso.id))\r",
							"    });\r",
							"\r",
							"pm.test(\"Check if the id object is numerous string\", function () {\r",
							"    const moment = require('moment');\r",
							"    const formats = [\r",
							"        moment.ISO_8601,\r",
							"        \"MM/DD/YYYY  :)  HH*mm*ss\"\r",
							"    ]\r",
							"    let jso = pm.response.json();\r",
							"        pm.expect(moment(jso.createdAt, moment.ISO_8601, true).isValid());\r",
							"    });\r",
							"\r",
							"\r",
							"    \r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users/2",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://reqres.in/api/users/2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cc8acac8-9417-40ff-884f-7002b1d1ab6e",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{url}}/register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07e63ee7-735a-4041-a5df-d0ef4444739b",
						"exec": [
							"schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The Root Schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"additionalProperties\": true,",
							"    \"required\": [",
							"        \"id\",",
							"        \"token\"",
							"    ],",
							"    \"properties\": {",
							"        \"id\": {",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Id Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                4.0",
							"            ]",
							"        },",
							"        \"token\": {",
							"            \"type\": \"string\",",
							"            \"title\": \"The Token Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"QpwL5tke4Pnpja7X4\"",
							"            ]",
							"        }",
							"    }",
							"}",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var result = tv4.validateResult(pm.response.json(), schema)",
							"    if(!result.valid){",
							"        console.log(result)",
							"    }",
							"    pm.expect(result.valid).to.be.true;",
							"",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"QpwL5tke4Pnpja7X4\");",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(4);",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.token).to.eql(\"QpwL5tke4Pnpja7X4\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pisweewel\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "unssuccessful{{url}}/register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07e63ee7-735a-4041-a5df-d0ef4444739b",
						"exec": [
							"schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The Root Schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"additionalProperties\": true,",
							"    \"required\": [",
							"        \"error\"",
							"    ],",
							"    \"properties\": {",
							"        \"error\": {",
							"            \"type\": \"string\",",
							"            \"title\": \"The Error Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Missing password\"",
							"            ]",
							"        }",
							"    }",
							"}",
							"",
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Missing password\");",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eql(\"Missing password\");",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var result = tv4.validateResult(pm.response.json(), schema)",
							"    if(!result.valid){",
							"        console.log(result)",
							"    }",
							"    pm.expect(result.valid).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{url}}/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aa124a60-ee32-47af-96de-af3afcdef5d6",
						"exec": [
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"    ",
							"});pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eql(\"Missing password\");",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Missing password\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"peter@klaven\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "success{{url}}/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aa124a60-ee32-47af-96de-af3afcdef5d6",
						"exec": [
							"schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The Root Schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"additionalProperties\": true,",
							"    \"required\": [",
							"        \"token\"",
							"    ],",
							"    \"properties\": {",
							"        \"token\": {",
							"            \"type\": \"string\",",
							"            \"title\": \"The Token Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"QpwL5tke4Pnpja7X4\"",
							"            ]",
							"        }",
							"    }",
							"}",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"});pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.token).to.eql(\"QpwL5tke4Pnpja7X4\");",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"QpwL5tke4Pnpja7X4\");",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var result = tv4.validateResult(pm.response.json(), schema)",
							"    if(!result.valid){",
							"        console.log(result)",
							"    }",
							"    pm.expect(result.valid).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "unssuccess{{url}}/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aa124a60-ee32-47af-96de-af3afcdef5d6",
						"exec": [
							"",
							"schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The Root Schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"additionalProperties\": true,",
							"    \"required\": [",
							"        \"page\",",
							"        \"per_page\",",
							"        \"total\",",
							"        \"total_pages\",",
							"        \"data\",",
							"        \"ad\"",
							"    ],",
							"    \"properties\": {",
							"        \"page\": {",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Page Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                1.0",
							"            ]",
							"        },",
							"        \"per_page\": {",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Per_page Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                6.0",
							"            ]",
							"        },",
							"        \"total\": {",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Total Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                12.0",
							"            ]",
							"        },",
							"        \"total_pages\": {",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Total_pages Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                2.0",
							"            ]",
							"        },",
							"        \"data\": {",
							"            \"type\": \"array\",",
							"            \"title\": \"The Data Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": [],",
							"            \"examples\": [",
							"                [",
							"                    {",
							"                        \"email\": \"george.bluth@reqres.in\",",
							"                        \"id\": 1.0,",
							"                        \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/calebogden/128.jpg\",",
							"                        \"first_name\": \"George\",",
							"                        \"last_name\": \"Bluth\"",
							"                    },",
							"                    {",
							"                        \"email\": \"janet.weaver@reqres.in\",",
							"                        \"id\": 2.0,",
							"                        \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg\",",
							"                        \"first_name\": \"Janet\",",
							"                        \"last_name\": \"Weaver\"",
							"                    },",
							"                    {",
							"                        \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/olegpogodaev/128.jpg\",",
							"                        \"first_name\": \"Emma\",",
							"                        \"last_name\": \"Wong\",",
							"                        \"email\": \"emma.wong@reqres.in\",",
							"                        \"id\": 3.0",
							"                    }",
							"                ]",
							"            ],",
							"            \"additionalItems\": true,",
							"            \"items\": {",
							"                \"type\": \"object\",",
							"                \"title\": \"The Items Schema\",",
							"                \"description\": \"An explanation about the purpose of this instance.\",",
							"                \"default\": {},",
							"                \"examples\": [",
							"                    {",
							"                        \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/calebogden/128.jpg\",",
							"                        \"first_name\": \"George\",",
							"                        \"last_name\": \"Bluth\",",
							"                        \"email\": \"george.bluth@reqres.in\",",
							"                        \"id\": 1.0",
							"                    },",
							"                    {",
							"                        \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg\",",
							"                        \"first_name\": \"Janet\",",
							"                        \"last_name\": \"Weaver\",",
							"                        \"email\": \"janet.weaver@reqres.in\",",
							"                        \"id\": 2.0",
							"                    },",
							"                    {",
							"                        \"email\": \"emma.wong@reqres.in\",",
							"                        \"id\": 3.0,",
							"                        \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/olegpogodaev/128.jpg\",",
							"                        \"first_name\": \"Emma\",",
							"                        \"last_name\": \"Wong\"",
							"                    }",
							"                ],",
							"                \"additionalProperties\": true,",
							"                \"required\": [",
							"                    \"id\",",
							"                    \"email\",",
							"                    \"first_name\",",
							"                    \"last_name\",",
							"                    \"avatar\"",
							"                ],",
							"                \"properties\": {",
							"                    \"id\": {",
							"                        \"type\": \"integer\",",
							"                        \"title\": \"The Id Schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": 0,",
							"                        \"examples\": [",
							"                            1.0",
							"                        ]",
							"                    },",
							"                    \"email\": {",
							"                        \"type\": \"string\",",
							"                        \"title\": \"The Email Schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": \"\",",
							"                        \"examples\": [",
							"                            \"george.bluth@reqres.in\"",
							"                        ]",
							"                    },",
							"                    \"first_name\": {",
							"                        \"type\": \"string\",",
							"                        \"title\": \"The First_name Schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": \"\",",
							"                        \"examples\": [",
							"                            \"George\"",
							"                        ]",
							"                    },",
							"                    \"last_name\": {",
							"                        \"type\": \"string\",",
							"                        \"title\": \"The Last_name Schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": \"\",",
							"                        \"examples\": [",
							"                            \"Bluth\"",
							"                        ]",
							"                    },",
							"                    \"avatar\": {",
							"                        \"type\": \"string\",",
							"                        \"title\": \"The Avatar Schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": \"\",",
							"                        \"examples\": [",
							"                            \"https://s3.amazonaws.com/uifaces/faces/twitter/calebogden/128.jpg\"",
							"                        ]",
							"                    }",
							"                }",
							"            }",
							"        },",
							"        \"ad\": {",
							"            \"type\": \"object\",",
							"            \"title\": \"The Ad Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": {},",
							"            \"examples\": [",
							"                {",
							"                    \"company\": \"StatusCode Weekly\",",
							"                    \"url\": \"http://statuscode.org/\",",
							"                    \"text\": \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\"",
							"                }",
							"            ],",
							"            \"additionalProperties\": true,",
							"            \"required\": [",
							"                \"company\",",
							"                \"url\",",
							"                \"text\"",
							"            ],",
							"            \"properties\": {",
							"                \"company\": {",
							"                    \"type\": \"string\",",
							"                    \"title\": \"The Company Schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": \"\",",
							"                    \"examples\": [",
							"                        \"StatusCode Weekly\"",
							"                    ]",
							"                },",
							"                \"url\": {",
							"                    \"type\": \"string\",",
							"                    \"title\": \"The Url Schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": \"\",",
							"                    \"examples\": [",
							"                        \"http://statuscode.org/\"",
							"                    ]",
							"                },",
							"                \"text\": {",
							"                    \"type\": \"string\",",
							"                    \"title\": \"The Text Schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": \"\",",
							"                    \"examples\": [",
							"                        \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\"",
							"                    ]",
							"                }",
							"            }",
							"        }",
							"    }",
							"}",
							"pm.test(\"Your test name\", function () {",
							"    var result = tv4.validateResult(pm.response.json(), schema)",
							"    if(!result.valid){",
							"        console.log(result)",
							"    }",
							"    pm.expect(result.valid).to.be.true;",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 5000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(5000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"peter@klaven\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users?delay=3",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "delay",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unssuccess{{url}}/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aa124a60-ee32-47af-96de-af3afcdef5d6",
						"exec": [
							"schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The Root Schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"additionalProperties\": true,",
							"    \"required\": [",
							"        \"error\"",
							"    ],",
							"    \"properties\": {",
							"        \"error\": {",
							"            \"type\": \"string\",",
							"            \"title\": \"The Error Schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Missing password\"",
							"            ]",
							"        }",
							"    }",
							"}",
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"    ",
							"});pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eql(\"Missing password\");",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Missing password\");",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var result = tv4.validateResult(pm.response.json(), schema)",
							"    if(!result.valid){",
							"        console.log(result)",
							"    }",
							"    pm.expect(result.valid).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"peter@klaven\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}